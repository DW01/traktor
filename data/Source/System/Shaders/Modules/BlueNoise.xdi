<?xml version="1.0" encoding="utf-8"?>
<object type="traktor.render.ShaderModule">
	<text>
	<![CDATA[

uint HilbertIndex(uvec2 p)
{
	uint i = 0u;
	for(uint l = 0x4000u; l > 0u; l >>= 1u)
	{
		uvec2 r = min(p & l, 1u);
		i = (i << 2u) | ((r.x * 3u) ^ r.y);       
		p = r.y == 0u ? (0x7FFFu * r.x) ^ p.yx : p;
	}
	return i;
}

uint ReverseBits(uint x)
{
	x = ((x & 0xaaaaaaaau) >> 1) | ((x & 0x55555555u) << 1);
	x = ((x & 0xccccccccu) >> 2) | ((x & 0x33333333u) << 2);
	x = ((x & 0xf0f0f0f0u) >> 4) | ((x & 0x0f0f0f0fu) << 4);
	x = ((x & 0xff00ff00u) >> 8) | ((x & 0x00ff00ffu) << 8);
	return (x >> 16) | (x << 16);
}

// from: https://psychopath.io/post/2021_01_30_building_a_better_lk_hash
uint OwenHash(uint x, uint seed)
{
	x ^= x * 0x3d20adeau;
	x += seed;
	x *= (seed >> 16) | 1u;
	x ^= x * 0x05526c56u;
	x ^= x * 0x53a22864u;
	return x;
}

float BlueNoise(uvec2 seed)
{
	uint m = HilbertIndex(seed);     // map pixel coords to hilbert curve index
	m = OwenHash(ReverseBits(m), 0xe7843fbfu);   // owen-scramble hilbert index
	m = OwenHash(ReverseBits(m), 0x8d8fb1e0u);   // map hilbert index to sobol sequence and owen-scramble
	return float(ReverseBits(m)) / 4294967296.0; // convert to float
}


	]]>
	</text>
</object>
